controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    odom_topic: "odom"
    progress_checker_plugins: ["progress_checker"] # progress_checker_plugin: "progress_checker" For Humble and older
    goal_checker_plugin: "goal_checker"
    controller_plugins: ["FollowPath"] # This is where we define the DWB controller plugin
      

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: True

    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "dwb_core::DWBLocalPlanner"
      angular_dist_threshold: 0.785
      forward_sampling_distance: 0.5
      rotate_to_heading_angular_vel: 1.8
      max_angular_accel: 3.2
      simulate_ahead_time: 1.0
      
      # Primary DWBLocalPlanner controller parameters
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.1
      min_vel_y: 0.0
      max_vel_x: 0.25
      max_vel_y: 0.0
      max_vel_theta: 0.5
      min_vel_theta: -0.5
      min_in_place_vel_theta: 0.4
      escape_vel: -0.1
      holonomic_robot: false

      min_speed_xy: 0.0
      max_speed_xy: 0.25
      min_speed_theta: 0.0
      acc_lim_x: 1.0
      acc_lim_y: 0.0
      acc_lim_theta: 2.0
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2

      # Forward simulation
      sim_time: 3.0
      sim_granularity: 0.05
      angular_sim_granularity: 0.025
      vx_samples: 3
      vtheta_samples: 20

      # Goal tolerance
      yaw_goal_tolerance: 0.1
      xy_goal_tolerance: 0.2
      latch_xy_goal_tolerance: true

      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

local_costmap:
  local_costmap:
    ros__parameters:
      global_frame: map
      robot_base_frame: base_footprint
      transform_tolerance: 0.5
      update_frequency: 2.0
      publish_frequency: 2.0
      rolling_window: true
      always_send_full_costmap: false

      resolution: 0.05
      width: 2
      height: 2
      robot_radius: 0.3
      plugins: ["obstacle_layer", "inflation_layer"]
      always_send_full_costmap: True

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan_source
        max_obstacle_height: 0.3
        obstacle_range: 2.5
        raytrace_range: 3.0
        track_unknown_space: false
        footprint_clearing_enabled: true
        combination_method: 1


        scan_source:
          topic: /scan
          observation_persistence: 0.0
          expected_update_rate: 0.30
          clearing: true
          marking: true
          data_type: "LaserScan"
          min_obstacle_height: 0.1
          max_obstacle_height: 0.3
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0 # tune
          inf_is_valid: false

      
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 30.0
        inflation_radius: 0.4